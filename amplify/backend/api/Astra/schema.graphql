type TestProUserManagement @model @auth(rules: [{allow: public}]) {
  id: ID!
  user_id: String
  email: AWSEmail
  enabled: Boolean
}

type TokenManagement @model @auth(rules: [{allow: public}]) {
  id: ID!
  user_id: String
  email: AWSEmail
  identity_id: String!
  unlimited: Boolean!
  dummy_key: String
  prompt_tokens: Int!
  completion_tokens: Int!
  total_tokens: Int!
  image_generations: Int
}

type Suggestions @model @auth(rules: [{allow: public}]) {
  id: ID!
  suggestion: String
  is_img_suggestion: Boolean
}

type ChatGPTLLMs @model @auth(rules: [{allow: public}]) {
  id: ID!
  llm_version: String!
  subscribed: Boolean!
  display_name: String
  sort_order: Int
}

type ChatMessageObject {
  role: String!
  content: String!
  is_image_prompt: Boolean
}

type ChatHistoryRemote @model @auth(rules: [{allow: public}]) {
  id: ID!
  assistant_type: String!
  chat_message_list: [ChatMessageObject!]
  user_id: String!
  email: AWSEmail
  fav: Int!
  local_db_id: String!
  modified_at: AWSTimestamp!
}

type OpenAi @model @auth(rules: [{allow: public}]) {
  id: ID!
  open_ai: String!
  token_count: Int
  enable_image_variations: Boolean
}
 